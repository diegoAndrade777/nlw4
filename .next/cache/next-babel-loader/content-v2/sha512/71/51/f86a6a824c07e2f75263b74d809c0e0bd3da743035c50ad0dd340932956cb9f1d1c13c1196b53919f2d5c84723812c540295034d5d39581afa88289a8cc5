{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cliente/Documentos/GitHub/nlw4-move.it/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengeContext } from \"./ChallengesContext\";\nvar countdownTimeout;\nexport var CountdownContext = /*#__PURE__*/createContext({});\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var _useContext = useContext(ChallengeContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n    setHasFinished(false);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"xQoBG5WteiYjp1jjnAlN9x90smk=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/home/cliente/Documentos/GitHub/nlw4-move.it/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengeContext","countdownTimeout","CountdownContext","CountdownProvider","children","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","startNewChallenge","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAeA,IAAIC,gBAAJ;AAEA,OAAO,IAAMC,gBAAgB,gBAAGN,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASO,iBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBAC3CL,QAAQ,CAAC,MAAM,EAAP,CADmC;AAAA,MAC5DM,IAD4D;AAAA,MACtDC,OADsD;;AAAA,mBAEnCP,QAAQ,CAAC,KAAD,CAF2B;AAAA,MAE5DQ,QAF4D;AAAA,MAElDC,WAFkD;;AAAA,mBAG7BT,QAAQ,CAAC,KAAD,CAHqB;AAAA,MAG5DU,WAH4D;AAAA,MAG/CC,cAH+C;;AAAA,oBAKrCb,UAAU,CAACG,gBAAD,CAL2B;AAAA,MAK3DW,iBAL2D,eAK3DA,iBAL2D;;AAOnE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWT,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMU,OAAO,GAAGV,IAAI,GAAG,EAAvB;;AAEA,WAASW,cAAT,GAA0B;AACtBR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASS,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACjB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEDZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGS,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAyB;AACrBJ,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,YAAM;AAChCb,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AAC/BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACJ,QAAD,EAAWF,IAAX,CAVM,CAAT;AAYA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BO,MAAAA,OAAO,EAAPA,OAD8B;AAE9BG,MAAAA,OAAO,EAAPA,OAF8B;AAG9BN,MAAAA,WAAW,EAAXA,WAH8B;AAI9BF,MAAAA,QAAQ,EAARA,QAJ8B;AAK9BS,MAAAA,cAAc,EAAdA,cAL8B;AAM9BC,MAAAA,cAAc,EAAdA;AAN8B,KAAlC;AAAA,cAQKb;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7CeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\nimport { ChallengeContext } from \"./ChallengesContext\";\n\ninterface CountdownContextData {\n    minutes: number,\n    seconds: number,\n    hasFinished: boolean,\n    isActive: boolean,\n    startCountdown: () => void,\n    resetCountdown: () => void\n}\n\ninterface CountdownContextProps {\n    children: ReactNode;\n}\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport const CountdownContext = createContext({} as CountdownContextData);\n\nexport function CountdownProvider({ children }: CountdownContextProps) {\n    const [time, setTime] = useState(0.1 * 60);\n    const [isActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false);\n\n    const { startNewChallenge } = useContext(ChallengeContext);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    function startCountdown() {\n        setIsActive(true);\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setTime(0.1 * 60);\n        setHasFinished(false);\n    }\n\n    useEffect(() => {\n        if(isActive && time > 0) {\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1)\n            }, 1000)\n        } else if (isActive && time === 0) {\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n        }\n    }, [isActive, time])\n\n    return (\n        <CountdownContext.Provider value={{\n            minutes,\n            seconds,\n            hasFinished,\n            isActive,\n            startCountdown,\n            resetCountdown\n        }}>\n            {children}\n        </CountdownContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}