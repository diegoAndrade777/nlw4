{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/cliente/Documentos/GitHub/nlw4-move.it/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/cliente/Documentos/GitHub/nlw4-move.it/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  ;\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  var startNewChallenge = function startNewChallenge() {\n    var randonChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randonChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification('Novo desafio ðŸŽ‰', {\n        body: \"Valendo \".concat(challenge.amount, \"xp\")\n      });\n    }\n  };\n\n  var resetChallenge = function resetChallenge() {\n    setActiveChallenge(null);\n  };\n\n  var completeChallenge = function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"UqHVByiPLb7kVaLDO0z8bDhE3KM=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["/home/cliente/Documentos/GitHub/nlw4-move.it/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengeContext","ChallengeProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randonChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\n\ninterface Challenge {\n    type: 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengeProviderData {\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n    experienceToNextLevel: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    resetChallenge: () => void;\n    completeChallenge: () => void;\n    closeLevelUpModal: () => void;\n}\n\ninterface ChallengeProviderProps {\n    children: ReactNode;\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n}\n\nexport const ChallengeContext = createContext({} as ChallengeProviderData);\n\nexport function ChallengeProvider({ \n    children, \n    ...rest\n}: ChallengeProviderProps) {\n    const [level, setLevel] = useState(rest.level ?? 1);\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\n\n    const [activeChallenge, setActiveChallenge] = useState(null);\n    const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, []);\n\n    useEffect(() => {\n        Cookies.set('level', String(level));\n        Cookies.set('currentExperience', String(currentExperience));\n        Cookies.set('challengesCompleted', String(challengesCompleted));\n    }, [level, currentExperience, challengesCompleted])\n\n    function levelUp() {\n        setLevel(level + 1);\n        setIsLevelUpModalOpen(true);\n    };\n\n    function closeLevelUpModal() {\n        setIsLevelUpModalOpen(false);\n    }\n\n    const startNewChallenge = () => {\n        const randonChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randonChallengeIndex];\n\n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === \"granted\") {\n            new Notification('Novo desafio ðŸŽ‰', {\n                body: `Valendo ${challenge.amount}xp`\n            })\n        }\n    }\n\n    const resetChallenge = () => {\n        setActiveChallenge(null);\n    }\n\n    const completeChallenge = () => {\n        if(!activeChallenge) {\n            return;\n        }\n\n        const { amount } = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if (finalExperience >= experienceToNextLevel) {\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n    }\n\n    return (\n        <ChallengeContext.Provider \n            value={{ \n                level, \n                currentExperience, \n                challengesCompleted, \n                activeChallenge,\n                experienceToNextLevel,\n                levelUp, \n                startNewChallenge,\n                resetChallenge,\n                completeChallenge,\n                closeLevelUpModal\n            }}>\n            {children}\n\n            { isLevelUpModalOpen && <LevelUpModal /> }\n        </ChallengeContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}